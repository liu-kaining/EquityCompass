"""Initial migration

Revision ID: bcd772e3faed
Revises: 
Create Date: 2025-08-23 19:39:19.787157

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'bcd772e3faed'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admins',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=50), nullable=True, comment='SUPER_ADMIN/ADMIN'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('prompt_templates',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False, comment='模板名称'),
    sa.Column('version', sa.String(length=50), nullable=False, comment='版本号'),
    sa.Column('content', sa.Text(), nullable=False, comment='Prompt内容'),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='是否为当前使用版本'),
    sa.Column('template_type', sa.String(length=50), nullable=True, comment='TECHNICAL/FUNDAMENTAL/COMPREHENSIVE'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'version')
    )
    op.create_table('system_configs',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('config_key', sa.String(length=200), nullable=False),
    sa.Column('config_value', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('config_key')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False, comment='邮箱地址，唯一标识'),
    sa.Column('nickname', sa.String(length=100), nullable=True, comment='用户昵称'),
    sa.Column('plan_type', sa.String(length=50), nullable=True, comment='TRIAL/FREE/SUBSCRIPTION/PAY_PER_USE'),
    sa.Column('remaining_quota', sa.Integer(), nullable=True, comment='剩余分析次数'),
    sa.Column('last_login', sa.DateTime(), nullable=True, comment='最后登录时间'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True, comment='账户是否激活'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('email_subscriptions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('is_subscribed', sa.Boolean(), nullable=True, comment='是否订阅每日邮件'),
    sa.Column('frequency', sa.String(length=20), nullable=True, comment='发送频率'),
    sa.Column('last_sent_at', sa.DateTime(), nullable=True, comment='最后发送时间'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('payment_transactions',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('transaction_id', sa.String(length=255), nullable=False, comment='第三方支付ID'),
    sa.Column('payment_provider', sa.String(length=50), nullable=False, comment='STRIPE/PADDLE'),
    sa.Column('amount', sa.Numeric(precision=10, scale=2), nullable=False, comment='金额'),
    sa.Column('currency', sa.String(length=3), nullable=True, comment='货币类型'),
    sa.Column('transaction_type', sa.String(length=50), nullable=False, comment='SUBSCRIPTION/ONE_TIME'),
    sa.Column('status', sa.String(length=20), nullable=True, comment='PENDING/SUCCESS/FAILED/REFUNDED'),
    sa.Column('raw_response', sa.Text(), nullable=True, comment='支付网关原始响应'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transaction_id')
    )
    op.create_table('stocks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=20), nullable=False, comment='股票代码，如AAPL或00700.HK'),
    sa.Column('name', sa.String(length=200), nullable=False, comment='公司名称'),
    sa.Column('market', sa.String(length=10), nullable=False, comment='US/HK'),
    sa.Column('exchange', sa.String(length=50), nullable=True, comment='NASDAQ/HKEX等'),
    sa.Column('industry', sa.String(length=100), nullable=True, comment='行业分类'),
    sa.Column('stock_type', sa.String(length=20), nullable=True, comment='BUILT_IN/USER_CUSTOM'),
    sa.Column('market_cap', sa.BigInteger(), nullable=True, comment='市值（单位：美元/港币）'),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True, comment='自定义股票的创建者'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('user_plans',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('plan_type', sa.String(length=50), nullable=False, comment='TRIAL/FREE/SUBSCRIPTION/PAY_PER_USE'),
    sa.Column('plan_start_date', sa.DateTime(), nullable=True),
    sa.Column('plan_end_date', sa.DateTime(), nullable=True),
    sa.Column('remaining_quota', sa.Integer(), nullable=True, comment='剩余分析次数'),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('analysis_tasks',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('stock_id', sa.BigInteger(), nullable=False),
    sa.Column('task_id', sa.String(length=255), nullable=False, comment='Celery任务ID'),
    sa.Column('status', sa.String(length=20), nullable=True, comment='PENDING/PROCESSING/SUCCESS/FAILED'),
    sa.Column('analysis_date', sa.Date(), nullable=False, comment='分析日期 YYYY-MM-DD'),
    sa.Column('prompt_version', sa.String(length=50), nullable=True, comment='使用的Prompt版本'),
    sa.Column('llm_model', sa.String(length=100), nullable=True, comment='使用的LLM模型'),
    sa.Column('error_message', sa.Text(), nullable=True, comment='失败时的错误信息'),
    sa.Column('retry_count', sa.Integer(), nullable=True, comment='重试次数'),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True, comment='完成时间'),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('task_id')
    )
    op.create_table('user_watchlists',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('stock_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'stock_id')
    )
    op.create_table('report_index',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('stock_id', sa.BigInteger(), nullable=False),
    sa.Column('analysis_date', sa.Date(), nullable=False, comment='分析日期 YYYY-MM-DD'),
    sa.Column('file_path', sa.String(length=500), nullable=False, comment='JSON文件路径'),
    sa.Column('summary', sa.Text(), nullable=True, comment='报告摘要'),
    sa.Column('generated_at', sa.DateTime(), nullable=True),
    sa.Column('generated_by_task_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['generated_by_task_id'], ['analysis_tasks.id'], ),
    sa.ForeignKeyConstraint(['stock_id'], ['stocks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stock_id', 'analysis_date')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('report_index')
    op.drop_table('user_watchlists')
    op.drop_table('analysis_tasks')
    op.drop_table('user_plans')
    op.drop_table('stocks')
    op.drop_table('payment_transactions')
    op.drop_table('email_subscriptions')
    op.drop_table('users')
    op.drop_table('system_configs')
    op.drop_table('prompt_templates')
    op.drop_table('admins')
    # ### end Alembic commands ###
